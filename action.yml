name: "Create repository action"
description: "Creates a new GitHub repository"
author: "FLECS Technologies GmbH <info@flecs.tech>"

inputs:
  name:
    description: "Name of the new repository"
    type: string
    required: true
  org:
    description: "GitHub organization"
    type: string
    required: true
  description:
    description: "Description of the new repository"
    type: string
    required: false
  private:
    description: "Visibility of the new repository"
    type: boolean
    required: false
  auto-init:
    description: "Create commit with empty README"
    type: boolean
    required: false
  gitignore-template:
    description: "Create .gitignore from template"
    type: string
    required: false
  license-template:
    description: "Create LICENSE from template"
    type: string
    required: false

runs:
  using: "composite"
  steps:
    - name: "Validate inputs"
      run: |
        if [ -z "${{ env.GITHUB_TOKEN }}" ]; then
          echo "Required enviroment variable GITHUB_TOKEN is not set" 1>&2
          exit 1
        fi
      shell: bash
    - name: "Build HTTP body"
      id: http-body
      run: |
        JSON=$(echo "{}" | jq -rc '.name |= "${{ inputs.name}}"')
        if [ -n "${{ inputs.description }}" ]; then
          JSON=$(echo "${JSON}" | jq -rc '.description |= "${{ inputs.description}}"')
        fi
        if [ -n "${{ inputs.private }}" ]; then
          JSON=$(echo "${JSON}" | jq -rc '.private |= ${{ inputs.private}}')
        fi
        if [ -n "${{ inputs.auto-init }}" ]; then
          JSON=$(echo "${JSON}" | jq -rc '.auto_init |= ${{ inputs.auto-init}}')
        fi
        if [ -n "${{ inputs.gitignore-template }}" ]; then
          JSON=$(echo "${JSON}" | jq -rc '.gitignore_template |= "${{ inputs.gitignore-template}}"')
        fi
        if [ -n "${{ inputs.license-template }}" ]; then
          JSON=$(echo "${JSON}" | jq -rc '.license_template |= "${{ inputs.license-template}}"')
        fi
        echo "json=${JSON}" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: "Unit test"
      if: env.FLECS_ACTION_UNIT_TEST == 'true'
      run: |
        JSON="{}"
        JSON=$(echo "${JSON}" | jq -rc '.route |= "POST /orgs/${{ inputs.org }}/repos"')
        JSON=$(echo "${JSON}" | jq -rc '.data |= ${{ steps.http-body.outputs.json }}')
        echo "REQUEST_JSON=${JSON}" >> "$GITHUB_ENV"
      shell: bash
    - name: "Create repository"
      if: env.FLECS_ACTION_UNIT_TEST != 'true'
      uses: octokit/request-action@v2.x
      with:
        route: POST /orgs/{owner}/repos
        owner: ${{ inputs.org }}
        data: ${{ steps.http-body.outputs.json }}
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
